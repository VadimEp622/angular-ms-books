# devleopment compose file
services:

  ms-books-app:
    hostname: backend
    image: $DOCKER_HUB_USER/ms-books-dev:latest
    build:
      context: ./backend
      dockerfile: ./Dockerfile.dev
    depends_on:
      - mysqldb
    restart: unless-stopped
    env_file: .env
    ports:
      - $NODE_HOST_PORT:$PORT
    environment:
      - DB_HOST=mysqldb
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_LOCAL_PORT
    stdin_open: true
    tty: true
    volumes:
      - /usr/src/app/node_modules
      - ./backend:/usr/src/app

  mysqldb:
    image: mysql:8.3
    container_name: mysqlcontainer
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    volumes:
      - ./backend/dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - db:/var/lib/mysql

  # INFO: frontend live reload works!
  # TODO: fix backend fetch api's, my ideas:
  #    1) make front-end Dockerfile run using staging, build -> nginx
  #    2) add front-end proxy?
  frontend:
    stdin_open: true
    hostname: frontend
    depends_on:
      - ms-books-app
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    volumes:
      - /usr/src/app/node_modules
      - ./frontend:/usr/src/app
      # - "./:/var/www/html"
    ports:
      - 4200:4200

  nginx:
    depends_on:
      - ms-books-app
      - frontend
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"

volumes:
  db:
