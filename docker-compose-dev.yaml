# dev compose file - for local development

services:

 # **************** BACK-END ****************
  ms-books-app:
    hostname: backend
    image: ms-books-dev-backend:latest
    build:
      context: ./backend
      dockerfile: ./Dockerfile.dev
    depends_on:
      - mysqldb
    restart: unless-stopped
    env_file: .env
    ports:
      - ${NODE_HOST_PORT}:${PORT}
    environment:
      - DB_HOST=mysqldb
      - DB_USER=${MYSQLDB_USER}
      - DB_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - DB_NAME=${MYSQLDB_DATABASE}
      - DB_PORT=${MYSQLDB_LOCAL_PORT}
    stdin_open: true
    tty: true
    volumes:
      - /usr/src/app/node_modules
      - ./backend:/usr/src/app

  # **************** DATABASE ****************
  mysqldb:
    image: mysql:8.3
    container_name: mysqlcontainer
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    volumes:
      - ./backend/dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - mysql-data:/var/lib/mysql

  # **************** FRONT-END ****************
  frontend:
    image: ms-books-dev-frontend:latest
    hostname: frontend
    stdin_open: true
    depends_on:
      - ms-books-app
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    volumes:
      - /usr/src/app/node_modules
      - ./frontend:/usr/src/app
    ports:
      - 4200:4200

  # **************** NGINX ****************
  nginx:
    image: ms-books-dev-nginx:latest
    depends_on:
      - ms-books-app
      - frontend
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - 3050:80

volumes:
  mysql-data:
